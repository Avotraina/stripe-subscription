{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///home/avotraina/projetcts/bun/blog-generator/app/lib/db.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client'\n\nconst prismaClientSingleton = () => {\n  return new PrismaClient()\n}\n\ndeclare const globalThis: {\n  prismaGlobal: ReturnType<typeof prismaClientSingleton>;\n} & typeof global;\n\nconst prisma = globalThis.prismaGlobal ?? prismaClientSingleton()\n\nexport default prisma\n\nif (process.env.NODE_ENV !== 'production') globalThis.prismaGlobal = prisma"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,wBAAwB;IAC5B,OAAO,IAAI,2GAAA,CAAA,eAAY;AACzB;AAMA,MAAM,SAAS,WAAW,YAAY,IAAI;uCAE3B;AAEf,wCAA2C,WAAW,YAAY,GAAG"}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":["file:///home/avotraina/projetcts/bun/blog-generator/app/api/user/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\nimport prisma from \"@/app/lib/db\";\n\n\nexport async function GET(req: NextRequest) {\n\n    const userId = req.nextUrl?.searchParams.get(\"id\") ?? undefined;\n\n\tconst user = await prisma.user.findUnique({\n        where: {\n            keycloakUserId: userId,\n        },\n    })\n\treturn NextResponse.json({response: user});\n}\n\n\nexport async function PATCH(req: any) {\n    const userId = req.nextUrl?.searchParams.get(\"id\");\n    if (!userId) {\n        return NextResponse.json({error: \"wesite id required\"});\n    }\n\n    const data = await req.json();\n    await prisma.user.update({\n        where: {\n            id: userId,\n        },\n        data: {\n            ... data\n        }\n    });\n\n\treturn NextResponse.json({response: \"Website updated successfully\"});\n\n}"],"names":[],"mappings":";;;;AAAA;AACA;;;AAGO,eAAe,IAAI,GAAgB;IAEtC,MAAM,SAAS,IAAI,OAAO,EAAE,aAAa,IAAI,SAAS;IAEzD,MAAM,OAAO,MAAM,kHAAA,CAAA,UAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACnC,OAAO;YACH,gBAAgB;QACpB;IACJ;IACH,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAC,UAAU;IAAI;AACzC;AAGO,eAAe,MAAM,GAAQ;IAChC,MAAM,SAAS,IAAI,OAAO,EAAE,aAAa,IAAI;IAC7C,IAAI,CAAC,QAAQ;QACT,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAC,OAAO;QAAoB;IACzD;IAEA,MAAM,OAAO,MAAM,IAAI,IAAI;IAC3B,MAAM,kHAAA,CAAA,UAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QACrB,OAAO;YACH,IAAI;QACR;QACA,MAAM;YACF,GAAI,IAAI;QACZ;IACJ;IAEH,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAC,UAAU;IAA8B;AAEnE"}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}