{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/avotraina/projetcts/bun/blog-generator/src/components/ui/tabs.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Tabs = registerClientReference(\n    function() { throw new Error(\"Attempted to call Tabs() from the server but Tabs is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/tabs.tsx <module evaluation>\",\n    \"Tabs\",\n);\nexport const TabsContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call TabsContent() from the server but TabsContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/tabs.tsx <module evaluation>\",\n    \"TabsContent\",\n);\nexport const TabsList = registerClientReference(\n    function() { throw new Error(\"Attempted to call TabsList() from the server but TabsList is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/tabs.tsx <module evaluation>\",\n    \"TabsList\",\n);\nexport const TabsTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call TabsTrigger() from the server but TabsTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/tabs.tsx <module evaluation>\",\n    \"TabsTrigger\",\n);\n"],"names":[],"mappings":";;;;;;AAAA;;AACO,MAAM,OAAO,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACtC;IAAa,MAAM,IAAI,MAAM;AAAwN,GACrP,4DACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,4DACA;AAEG,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,4DACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,4DACA"}},
    {"offset": {"line": 27, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":["file:///home/avotraina/projetcts/bun/blog-generator/src/components/ui/tabs.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Tabs = registerClientReference(\n    function() { throw new Error(\"Attempted to call Tabs() from the server but Tabs is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/tabs.tsx\",\n    \"Tabs\",\n);\nexport const TabsContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call TabsContent() from the server but TabsContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/tabs.tsx\",\n    \"TabsContent\",\n);\nexport const TabsList = registerClientReference(\n    function() { throw new Error(\"Attempted to call TabsList() from the server but TabsList is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/tabs.tsx\",\n    \"TabsList\",\n);\nexport const TabsTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call TabsTrigger() from the server but TabsTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/tabs.tsx\",\n    \"TabsTrigger\",\n);\n"],"names":[],"mappings":";;;;;;AAAA;;AACO,MAAM,OAAO,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACtC;IAAa,MAAM,IAAI,MAAM;AAAwN,GACrP,wCACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,wCACA;AAEG,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,wCACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,wCACA"}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":["file:///home/avotraina/projetcts/bun/blog-generator/app/dashboard/Articles.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Articles = registerClientReference(\n    function() { throw new Error(\"Attempted to call Articles() from the server but Articles is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/dashboard/Articles.tsx <module evaluation>\",\n    \"Articles\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,4DACA"}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":["file:///home/avotraina/projetcts/bun/blog-generator/app/dashboard/Articles.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Articles = registerClientReference(\n    function() { throw new Error(\"Attempted to call Articles() from the server but Articles is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/dashboard/Articles.tsx\",\n    \"Articles\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,wCACA"}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 107, "column": 0}, "map": {"version":3,"sources":["file:///home/avotraina/projetcts/bun/blog-generator/app/dashboard/Planifications.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Planifications = registerClientReference(\n    function() { throw new Error(\"Attempted to call Planifications() from the server but Planifications is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/dashboard/Planifications.tsx <module evaluation>\",\n    \"Planifications\",\n);\nexport const columns = registerClientReference(\n    function() { throw new Error(\"Attempted to call columns() from the server but columns is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/dashboard/Planifications.tsx <module evaluation>\",\n    \"columns\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,kEACA;AAEG,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,kEACA"}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":["file:///home/avotraina/projetcts/bun/blog-generator/app/dashboard/Planifications.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Planifications = registerClientReference(\n    function() { throw new Error(\"Attempted to call Planifications() from the server but Planifications is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/dashboard/Planifications.tsx\",\n    \"Planifications\",\n);\nexport const columns = registerClientReference(\n    function() { throw new Error(\"Attempted to call columns() from the server but columns is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/dashboard/Planifications.tsx\",\n    \"columns\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,8CACA;AAEG,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,8CACA"}},
    {"offset": {"line": 137, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 147, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 161, "column": 0}, "map": {"version":3,"sources":["file:///home/avotraina/projetcts/bun/blog-generator/app/lib/db.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client'\n\nconst prismaClientSingleton = () => {\n  return new PrismaClient()\n}\n\ndeclare const globalThis: {\n  prismaGlobal: ReturnType<typeof prismaClientSingleton>;\n} & typeof global;\n\nconst prisma = globalThis.prismaGlobal ?? prismaClientSingleton()\n\nexport default prisma\n\nif (process.env.NODE_ENV !== 'production') globalThis.prismaGlobal = prisma"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,wBAAwB;IAC5B,OAAO,IAAI,2GAAA,CAAA,eAAY;AACzB;AAMA,MAAM,SAAS,WAAW,YAAY,IAAI;uCAE3B;AAEf,wCAA2C,WAAW,YAAY,GAAG"}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 178, "column": 0}, "map": {"version":3,"sources":["file:///home/avotraina/projetcts/bun/blog-generator/app/dashboard/WebsiteSettings.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const WebsiteSettings = registerClientReference(\n    function() { throw new Error(\"Attempted to call WebsiteSettings() from the server but WebsiteSettings is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/dashboard/WebsiteSettings.tsx <module evaluation>\",\n    \"WebsiteSettings\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,mEACA"}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 192, "column": 0}, "map": {"version":3,"sources":["file:///home/avotraina/projetcts/bun/blog-generator/app/dashboard/WebsiteSettings.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const WebsiteSettings = registerClientReference(\n    function() { throw new Error(\"Attempted to call WebsiteSettings() from the server but WebsiteSettings is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/dashboard/WebsiteSettings.tsx\",\n    \"WebsiteSettings\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,+CACA"}},
    {"offset": {"line": 200, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 206, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 210, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 216, "column": 0}, "map": {"version":3,"sources":["file:///home/avotraina/projetcts/bun/blog-generator/app/dashboard/website/%5BwebsiteSlug%5D/page.tsx"],"sourcesContent":["import { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/src/components/ui/tabs\";\nimport { CalendarCheck, CalendarClock, File, PlusCircle, Rss, Settings } from \"lucide-react\";\nimport { Articles } from \"../../Articles\";\nimport { Planifications } from \"../../Planifications\";\nimport React, { Suspense } from \"react\";\nimport { get } from \"@/app/lib/server\";\nimport { T_Article } from \"@/app/types/article\";\nimport { T_Website } from \"@/app/types/website\";\nimport prisma from \"@/app/lib/db\";\nimport { WebsiteSettings } from \"../../WebsiteSettings\";\n\n\nexport default async function DashboardPage(\n    // props?: {\n    //     searchParams: Promise<{ q: string; offset: string }>\n    // }\n    props: {\n        params: Promise<{\n            websiteSlug: string;\n        }>\n    }\n) {\n\n    const param = await props.params;\n\n    let website = await prisma.website.findUnique({\n        where: {\n            slug: param.websiteSlug,\n        }\n    });\n\n    const articles = await prisma.article.findMany({\n        where: {\n            OR: [\n                {\n                    websiteId: website?.id,\n                    status: 'active'\n                },\n                {\n                    websiteId: website?.id,\n                    status: 'disabled'\n                },\n            ]\n        }\n    });\n\n    const scheduled = await prisma.article.findMany({\n        where: {\n            websiteId: website?.id,\n            status: 'scheduled',\n        },\n    });\n\n    return (\n        <Suspense fallback={<p>Loading ...</p>}>\n            <Tabs defaultValue=\"all\" >\n                <div className=\"flex items-center\">\n                    <TabsList className=\"w-full flex flex-row gap-4 h-12\">\n                        <TabsTrigger value=\"articles\" className=\"flex flex-row gap-2\"><Rss />Articles</TabsTrigger>\n                        <TabsTrigger value=\"planifications\" className=\"flex flex-row gap-2\"> <CalendarCheck /> Planifications</TabsTrigger>\n                        <TabsTrigger value=\"settings\" className=\"flex flex-row gap-2\"><Settings />Settings</TabsTrigger>\n\n                    </TabsList>\n\n                </div>\n                <TabsContent value=\"articles\">\n                    <Articles websiteId={website?.id as string} articles={articles}></Articles>\n                </TabsContent>\n                <TabsContent value=\"planifications\">\n                    <Planifications articles={scheduled} />\n                </TabsContent>\n                <TabsContent value=\"settings\">\n                    <WebsiteSettings website={website as T_Website}/>\n                </TabsContent>\n                <TabsContent value=\"all\">\n                    {/* <ProductsTable\n            products={products}\n            offset={newOffset ?? 0}\n            totalProducts={totalProducts}\n            /> */}\n                </TabsContent>\n            </Tabs>\n        </Suspense>\n    );\n}"],"names":[],"mappings":";;;;AAAA;AAEA;AACA;AACA;AAIA;AACA;AARA;AAAA;AAAA;;;;;;;;;AAWe,eAAe,cAC1B,YAAY;AACZ,2DAA2D;AAC3D,IAAI;AACJ,KAIC;IAGD,MAAM,QAAQ,MAAM,MAAM,MAAM;IAEhC,IAAI,UAAU,MAAM,gHAAA,CAAA,UAAM,CAAC,OAAO,CAAC,UAAU,CAAC;QAC1C,OAAO;YACH,MAAM,MAAM,WAAW;QAC3B;IACJ;IAEA,MAAM,WAAW,MAAM,gHAAA,CAAA,UAAM,CAAC,OAAO,CAAC,QAAQ,CAAC;QAC3C,OAAO;YACH,IAAI;gBACA;oBACI,WAAW,SAAS;oBACpB,QAAQ;gBACZ;gBACA;oBACI,WAAW,SAAS;oBACpB,QAAQ;gBACZ;aACH;QACL;IACJ;IAEA,MAAM,YAAY,MAAM,gHAAA,CAAA,UAAM,CAAC,OAAO,CAAC,QAAQ,CAAC;QAC5C,OAAO;YACH,WAAW,SAAS;YACpB,QAAQ;QACZ;IACJ;IAEA,qBACI,8OAAC,qMAAA,CAAA,WAAQ;QAAC,wBAAU,8OAAC;sBAAE;;;;;;kBACnB,cAAA,8OAAC,gIAAA,CAAA,OAAI;YAAC,cAAa;;8BACf,8OAAC;oBAAI,WAAU;8BACX,cAAA,8OAAC,gIAAA,CAAA,WAAQ;wBAAC,WAAU;;0CAChB,8OAAC,gIAAA,CAAA,cAAW;gCAAC,OAAM;gCAAW,WAAU;;kDAAsB,8OAAC,gMAAA,CAAA,MAAG;;;;;oCAAG;;;;;;;0CACrE,8OAAC,gIAAA,CAAA,cAAW;gCAAC,OAAM;gCAAiB,WAAU;;oCAAsB;kDAAC,8OAAC,wNAAA,CAAA,gBAAa;;;;;oCAAG;;;;;;;0CACtF,8OAAC,gIAAA,CAAA,cAAW;gCAAC,OAAM;gCAAW,WAAU;;kDAAsB,8OAAC,0MAAA,CAAA,WAAQ;;;;;oCAAG;;;;;;;;;;;;;;;;;;8BAKlF,8OAAC,gIAAA,CAAA,cAAW;oBAAC,OAAM;8BACf,cAAA,8OAAC,6HAAA,CAAA,WAAQ;wBAAC,WAAW,SAAS;wBAAc,UAAU;;;;;;;;;;;8BAE1D,8OAAC,gIAAA,CAAA,cAAW;oBAAC,OAAM;8BACf,cAAA,8OAAC,mIAAA,CAAA,iBAAc;wBAAC,UAAU;;;;;;;;;;;8BAE9B,8OAAC,gIAAA,CAAA,cAAW;oBAAC,OAAM;8BACf,cAAA,8OAAC,oIAAA,CAAA,kBAAe;wBAAC,SAAS;;;;;;;;;;;8BAE9B,8OAAC,gIAAA,CAAA,cAAW;oBAAC,OAAM;;;;;;;;;;;;;;;;;AAUnC"}},
    {"offset": {"line": 405, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 417, "column": 0}, "map": {"version":3,"sources":["file:///home/avotraina/projetcts/bun/blog-generator/app/services/refetchServer.ts"],"sourcesContent":["\"use server\";\n\nimport { revalidatePath } from \"next/cache\";\n\nexport default async function refetchForServer(path: string) {\n  revalidatePath(path, 'page');\n}"],"names":[],"mappings":";;;;;AAEA;;;;;AAEe,eAAe,iBAAiB,IAAY;IACzD,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE,MAAM;AACvB;;;IAF8B;;AAAA,+OAAA"}},
    {"offset": {"line": 435, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 441, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 443, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}