{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["file:///home/avotraina/projetcts/bun/blog-generator/app/lib/server.ts"],"sourcesContent":["\nexport const get = async <T = Record<string, unknown>> (url: string) => {\n    const response = await fetch(url);\n    return await sendResponse<T>(response);\n}\n\nexport const post = async <T> (url: string, data: unknown) => {\n    const body = JSON.stringify(data);\n    const response = await fetch(url, {\n        method: \"POST\",\n        headers: { \n            'Content-Type': 'application/json',\n        },\n        body: body\n    });\n\n    return await sendResponse<T>(response);\n}\n\nconst sendResponse = async <T>(response: Response): Promise<T> => {\n\tconst json = await response.json();\n\treturn json.response;\n};\n\nexport const patch = async <T = Record<string, unknown>>(url: string, data: any) => {\n\tconst response = await fetch(url, {\n\t\tmethod: 'PATCH',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tbody: JSON.stringify(data),\n\t});\n\treturn await sendResponse<T>(response);\n};"],"names":[],"mappings":";;;;;AACO,MAAM,MAAM,OAAqC;IACpD,MAAM,WAAW,MAAM,MAAM;IAC7B,OAAO,MAAM,aAAgB;AACjC;AAEO,MAAM,OAAO,OAAW,KAAa;IACxC,MAAM,OAAO,KAAK,SAAS,CAAC;IAC5B,MAAM,WAAW,MAAM,MAAM,KAAK;QAC9B,QAAQ;QACR,SAAS;YACL,gBAAgB;QACpB;QACA,MAAM;IACV;IAEA,OAAO,MAAM,aAAgB;AACjC;AAEA,MAAM,eAAe,OAAU;IAC9B,MAAM,OAAO,MAAM,SAAS,IAAI;IAChC,OAAO,KAAK,QAAQ;AACrB;AAEO,MAAM,QAAQ,OAAoC,KAAa;IACrE,MAAM,WAAW,MAAM,MAAM,KAAK;QACjC,QAAQ;QACR,SAAS;YACR,gBAAgB;QACjB;QACA,MAAM,KAAK,SAAS,CAAC;IACtB;IACA,OAAO,MAAM,aAAgB;AAC9B"}},
    {"offset": {"line": 81, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":["file:///home/avotraina/projetcts/bun/blog-generator/app/api/webhooks/stripe/route.ts"],"sourcesContent":["import { get, patch } from \"@/app/lib/server\";\nimport { findUserFromCustomerId } from \"@/app/services/users\";\nimport { getSession } from \"next-auth/react\";\nimport { NextRequest, NextResponse } from \"next/server\";\nimport Stripe from \"stripe\";\n\nexport const POST = async (req: NextRequest) => {\n    const body = (await req.json()) as Stripe.Event;\n\n    switch (body.type) {\n        case \"checkout.session.completed\":\n            const checkoutSession = body.data.object as Stripe.Checkout.Session;\n            // Handle successful payment\n            const stripeCustomerId = checkoutSession.customer;\n            console.log(\"SESSION COMPLETED\", stripeCustomerId)\n                const authSession = await getSession();\n\n            // const user = await findUserFromCustomerId(stripeCustomerId);\n            const user = await get(`/api/user?id=${authSession?.keyCloakUserId}`)\n            const response = await patch(`/api/user?id=${user?.id}`, {\n                stripeCustomerId: stripeCustomerId\n            })\n\n            // if (!user) {\n\n            //     const authSession = await getSession();\n            //     const response = await get(`/api/user?id=${authSession?.}`, {\n            //         stripeCustomerId: stripeCustomerId\n            //     })\n            // }\n            \n            break;\n\n        case \"payment_intent.succeeded\":\n            const paymentIntent = body.data.object as Stripe.PaymentIntent;\n            // Handle successful payment intent\n            break;\n\n        case \"payment_intent.payment_failed\":\n            const failedPaymentIntent = body.data.object as Stripe.PaymentIntent;\n            // Handle failed payment\n            break;\n\n        case \"customer.subscription.created\":\n            const subscriptionCreated = body.data.object as Stripe.Subscription;\n            // Handle new subscription\n            break;\n\n        case \"customer.subscription.updated\":\n            const subscriptionUpdated = body.data.object as Stripe.Subscription;\n            // Handle subscription update\n            console.log(\"SUBSCRIPTION UPDATE\")\n\n            break;\n\n        case \"customer.subscription.deleted\":\n            const subscriptionDeleted = body.data.object as Stripe.Subscription;\n            // Handle subscription cancellation\n            break;\n\n        case \"invoice.paid\":\n            const paidInvoice = body.data.object as Stripe.Invoice;\n            // Handle paid invoice\n            console.log(\"INVOICE PAID\")\n\n            break;\n\n        case \"invoice.payment_succeeded\":\n            const paymentSucceed = body.data.object as Stripe.Invoice;\n            // Handle paid invoice\n            console.log(\"INVOICE PAID\")\n\n            break;\n\n        case \"invoice.payment_failed\":\n            const failedInvoice = body.data.object as Stripe.Invoice;\n            // Handle failed invoice payment\n            break;\n\n        default:\n            console.log(`Unhandled event type: ${body.type}`);\n            break;\n        // case value:\n\n        //     break;\n\n        // default:\n        //     break;\n    }\n    return NextResponse.json({})\n\n}\n"],"names":[],"mappings":";;;AAAA;AAEA;AACA;;;;AAGO,MAAM,OAAO,OAAO;IACvB,MAAM,OAAQ,MAAM,IAAI,IAAI;IAE5B,OAAQ,KAAK,IAAI;QACb,KAAK;YACD,MAAM,kBAAkB,KAAK,IAAI,CAAC,MAAM;YACxC,4BAA4B;YAC5B,MAAM,mBAAmB,gBAAgB,QAAQ;YACjD,QAAQ,GAAG,CAAC,qBAAqB;YAC7B,MAAM,cAAc,MAAM,CAAA,GAAA,gJAAA,CAAA,aAAU,AAAD;YAEvC,+DAA+D;YAC/D,MAAM,OAAO,MAAM,CAAA,GAAA,sHAAA,CAAA,MAAG,AAAD,EAAE,CAAC,aAAa,EAAE,aAAa,gBAAgB;YACpE,MAAM,WAAW,MAAM,CAAA,GAAA,sHAAA,CAAA,QAAK,AAAD,EAAE,CAAC,aAAa,EAAE,MAAM,IAAI,EAAE;gBACrD,kBAAkB;YACtB;YAUA;QAEJ,KAAK;YACD,MAAM,gBAAgB,KAAK,IAAI,CAAC,MAAM;YAEtC;QAEJ,KAAK;YACD,MAAM,sBAAsB,KAAK,IAAI,CAAC,MAAM;YAE5C;QAEJ,KAAK;YACD,MAAM,sBAAsB,KAAK,IAAI,CAAC,MAAM;YAE5C;QAEJ,KAAK;YACD,MAAM,sBAAsB,KAAK,IAAI,CAAC,MAAM;YAC5C,6BAA6B;YAC7B,QAAQ,GAAG,CAAC;YAEZ;QAEJ,KAAK;YACD,MAAM,sBAAsB,KAAK,IAAI,CAAC,MAAM;YAE5C;QAEJ,KAAK;YACD,MAAM,cAAc,KAAK,IAAI,CAAC,MAAM;YACpC,sBAAsB;YACtB,QAAQ,GAAG,CAAC;YAEZ;QAEJ,KAAK;YACD,MAAM,iBAAiB,KAAK,IAAI,CAAC,MAAM;YACvC,sBAAsB;YACtB,QAAQ,GAAG,CAAC;YAEZ;QAEJ,KAAK;YACD,MAAM,gBAAgB,KAAK,IAAI,CAAC,MAAM;YAEtC;QAEJ;YACI,QAAQ,GAAG,CAAC,CAAC,sBAAsB,EAAE,KAAK,IAAI,EAAE;YAChD;IAOR;IACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,CAAC;AAE9B"}},
    {"offset": {"line": 147, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}